Timer unit: 1e-06 s

File: SerialGMMLogPDF.py
Function: Estep_serial at line 5
Total time: 36.6176 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                           @profile
     6                                           def Estep_serial( X, w, MuList, SigmaList ):
     7         1            7      7.0      0.0    N = X.shape[0]
     8         1            2      2.0      0.0    K = w.shape[0]
     9         1        54529  54529.0      0.1    logResp = np.zeros( (N, K) )
    10        26          158      6.1      0.0    for k in xrange( K ):
    11        25     36515358 1460614.3     99.7      logResp[:,k] = loggausspdf( X, MuList[k,:], SigmaList[k,:,:] )
    12         1        47558  47558.0      0.1    logResp += np.log( w )
    13         1            5      5.0      0.0    return logResp

File: SerialGMMLogPDF.py
Function: distMahal at line 15
Total time: 35.6342 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    15                                           @profile
    16                                           def distMahal( X, mu, Sigma ):
    17                                             ''' Calc mahalanobis distance: (x-mu)^T Sigma^{-1} (x-mu)
    18                                                  for each row of matrix X
    19                                             '''
    20        25      5619946 224797.8     15.8    Xdiff = X - mu
    21        25         8421    336.8      0.0    cholSigma = scipy.linalg.cholesky( Sigma, lower=True)
    22        25     23494689 939787.6     65.9    Q = np.linalg.solve( cholSigma, Xdiff.T )
    23        25      6510991 260439.6     18.3    distPerRow = np.sum( Q**2, axis=0 )
    24        25          183      7.3      0.0    return distPerRow, cholSigma

File: SerialGMMLogPDF.py
Function: loggausspdf at line 26
Total time: 36.3019 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    26                                           @profile
    27                                           def loggausspdf( X, mu, Sigma):
    28                                             ''' Calc log p( x | mu, Sigma) for each row of matrix X
    29                                             '''
    30        25          110      4.4      0.0    D = X.shape[1]
    31        25     36144650 1445786.0     99.6    distPerRow, cholSigma = distMahal( X, mu, Sigma )
    32        25         2866    114.6      0.0    logdetSigma = 2*np.sum( np.log( np.diag(cholSigma) ) )
    33        25          337     13.5      0.0    logNormConst = -0.5*D*np.log(2*np.pi) - 0.5*logdetSigma
    34        25       153778   6151.1      0.4    logpdfPerRow = logNormConst - 0.5*distPerRow
    35        25          158      6.3      0.0    return logpdfPerRow

